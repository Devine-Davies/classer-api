let g={};const E=questionnaire.benefits,S=questionnaire.affiliateLink,B=(e,o)=>g[e]=o,x=e=>g[e],I=e=>x(e)!==void 0,T=()=>{let e=0;const o=document.querySelectorAll("[data-question-block-idx]"),c=document.querySelectorAll('[id^="form-question-block-"]'),s=document.querySelector("[data-results]"),i=document.querySelector("[data-classer-billboard]"),l=document.querySelector("[data-submit]"),d=document.querySelector("[data-view-all-results]"),f=document.querySelector("[data-reset]"),a=document.querySelectorAll("[data-next-question]"),u=document.querySelectorAll("[data-previous-question]"),m=document.querySelectorAll("input[type=radio]");[...a,...u].forEach(t=>t.addEventListener("click",n=>{n.preventDefault();const r=t.getAttribute("data-next-question")!==null,h=r?e+1:e-1;if(r){if(!I(e)){alert("Please select an answer before proceeding");return}const L=Object.entries(questionnaire.weights);if(!R(L,g,h)){alert("No results available, please select an answer before proceeding");return}}y(h)})),l.addEventListener("click",t=>{t.preventDefault();const n=Object.entries(questionnaire.weights),r=b(n,g);p(r),j(g)}),m.forEach(t=>t.addEventListener("change",n=>{const r=parseInt(n.target.value);B(e,r)})),f.addEventListener("click",t=>{t.preventDefault(),g={},e=0,o.forEach(n=>n.classList.add("hidden")),c[e].classList.remove("hidden"),s.classList.add("hidden"),i.classList.add("hidden"),document.querySelectorAll("input[type=radio]").forEach(n=>{n.checked=!1})}),d.addEventListener("click",t=>{t.preventDefault(),d.remove(),document.querySelector(".acm-results-pane > ul").style.maxHeight="none"});const y=t=>{e=t,o.forEach((n,r)=>r===t?n.classList.remove("hidden"):n.classList.add("hidden"))},p=t=>{const n=Array.from({length:t.length});s.querySelector("ul").innerHTML=n.map((r,h)=>_(h)).join(""),setTimeout(()=>{s.querySelector("ul").innerHTML=t.map(w).join("");const r=s.querySelectorAll(".benefits-list");s.querySelectorAll("[data-toggle-open]").forEach(h=>{h.addEventListener("click",L=>{const k=L.target.getAttribute("data-toggle-open");r.forEach((v,A)=>A===parseInt(k)?v.classList.toggle("hidden"):v.classList.add("hidden"))})})},0),i.classList.remove("hidden"),s.classList.remove("hidden"),i.classList.remove("hidden"),o.forEach(r=>r.classList.add("hidden"))};c[e].classList.remove("hidden")};window.addEventListener("load",T);const R=(e,o,c)=>{const s=Object.entries(o).slice(0,c).reduce((i,[l,d])=>(i[l]=d,i),{});return b(e,s).length>0},b=(e,o)=>{const c=e.reduce((a,[u,m])=>{const y=m.map((t,n)=>t[o[n]]);if(y.includes("out"))return a;const p=y.reduce((t,n)=>t+n,0);return{...a,[u]:p}},{}),s=Object.entries(c),i=s.map(([,a])=>a),l=Math.max(...i),d=Math.min(...i),f=s.map(([a,u])=>{const m=l!==d?(u-d)/(l-d)*100:0;return{key:a,value:u,percentage:m,recommendationKey:M(m),recommendation:H(m)}});return f.sort((a,u)=>u.percentage-a.percentage),f},j=e=>{fetch("https://classermedia.com/api/site/actions-camera-matcher",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({answers:e,grc:document.querySelector("#grc-token").value})}).then()},M=e=>e>80?"highly-recommended":e>50?"good-match":"might-like",H=e=>e>80?"Highly recommend!":e>60?"It's a good match!":"You might like it!",K=e=>q(document.getElementById("template-acm-results-title").innerHTML,e),O=e=>{const o=E[e]||[],c=document.getElementById("template-acm-results-benefits-item").innerHTML;return`<ul>
        ${o.map(s=>q(c,{benefit:s})).join("")}
    </ul>`},w=(e,o,c=!0)=>{const s=document.getElementById("template-acm-results-item").innerHTML,i=e.recommendationKey==="might-like"?"":`<img class="absolute top-0 left-0 w-12 h-12 rounded-full" src="assets/images/action-camera-matcher/rankings/${e.recommendationKey}.svg">`;console.log(e);const l={key:e.key,rankingImage:i,title:K(e),benefits:O(e.key),affiliateLink:S[e.key],recommendation:e.recommendation,recommendationKey:e.recommendationKey,thumbnail:`assets/images/action-camera-matcher/cameras/${e.key}.jpg`};return q(s,l)},_=e=>w({key:"Fetching results...",recommendation:"Just a moment",recommendationKey:"might-like"},e,!1),q=(e,o)=>e.replace(/\${(.*?)}/g,(c,s)=>o[s.trim()]);
